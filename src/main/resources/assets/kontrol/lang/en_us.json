{
	"block.kontrol.white_basic_wire": "White Basic Wire",
	"block.kontrol.red_basic_wire": "Red Basic Wire",
	"block.kontrol.orange_basic_wire": "Orange Basic Wire",
	"block.kontrol.pink_basic_wire": "Pink Basic Wire",
	"block.kontrol.yellow_basic_wire": "Yellow Basic Wire",
	"block.kontrol.lime_basic_wire": "Lime Basic Wire",
	"block.kontrol.green_basic_wire": "Green Basic Wire",
	"block.kontrol.light_blue_basic_wire": "Light Blue Basic Wire",
	"block.kontrol.cyan_basic_wire": "Cyan Basic Wire",
	"block.kontrol.blue_basic_wire": "Blue Basic Wire",
	"block.kontrol.magenta_basic_wire": "Magenta Basic Wire",
	"block.kontrol.purple_basic_wire": "Purple Basic Wire",
	"block.kontrol.brown_basic_wire": "Brown Basic Wire",
	"block.kontrol.gray_basic_wire": "Gray Basic Wire",
	"block.kontrol.light_gray_basic_wire": "Light Gray Basic Wire",
	"block.kontrol.black_basic_wire": "Black Basic Wire",
	
	"block.kontrol.basic_push_button": "Basic Push Button",
	"block.kontrol.basic_switch": "Basic Switch",
	"block.kontrol.basic_buzzer": "Basic Buzzer",
	
	"block.kontrol.white_basic_led": "White LED",
	"block.kontrol.red_basic_led": "Red LED",
	"block.kontrol.green_basic_led": "Green LED",
	"block.kontrol.blue_basic_led": "Blue LED",
	"block.kontrol.yellow_basic_led": "Yellow LED",
	"block.kontrol.purple_basic_led": "Purple LED",
	"block.kontrol.cyan_basic_led": "Cyan LED",
	
	"block.kontrol.furnace_generator": "Furnace Generator",
	"block.kontrol.electrical_ground": "Ground Node",
	
	"block.kontrol.muc_port": "Microcontroller Port",
	"block.kontrol.muc_port.on": "§l§aON§r",
	"block.kontrol.muc_port.off": "§l§cOFF§r",
	"block.kontrol.muc_port.disable": "§l§7Disabled§r",
	"block.kontrol.muc_port.in": "§l§bIN§r",
	"block.kontrol.muc_port.out": "§l§cOUT§r",

	"block.kontrol.c8051_core": "M8051F020 Core",
	"block.kontrol.c8051_core.tooltip": "§7Not a C8051 ripoff!",

	"block.kontrol.muc_port_connector": "Microcontroller Port Connector",
	"block.kontrol.muc_port_connector.tooltip": "§7Connects MUC Ports for floodfill",
	
	"block.kontrol.muc_redstone_port_1": "BOG07 MUC Redstone Port",
	
	"block.kontrol.muc_port_maker": "Microcontroller Port Maker",
	"block.kontrol.muc_maker": "Microcontroller Maker",
	
	"block.kontrol.basic_light": "Basic Light",
	
	"block.kontrol.creative_battery": "Creative Battery",
	
	"block.kontrol.creative_capacitor": "Creative Capacitor",
	
	"block.kontrol.creative_resistor": "Creative Resistor",
	
	"block.kontrol.creative_inductor": "Creative Inductor",
	
	"item.kontrol.tooltip.shift": "§7§o<Press shift>",
	
	"item.kontrol.electrical.tooltip": "Rating: [V] V / [P] W",

	"item.kontrol.product_scanner": "Product State Scanner",
	"item.kontrol.product_scanner.tooltip.usage": "Scan electrical component & state information",

	"item.kontrol.multimeter.nodal_voltages": "§lNodal voltages: §r",
	"item.kontrol.multimeter.nodal_ids": "§lNode IDs: §r",
	"item.kontrol.multimeter.no_circuit_error": "§cBlock is not part of full circuit.",
	"item.kontrol.multimeter.precision": "§3§oPrecision: ",
	"item.kontrol.multimeter.tooltip.usage": "Right click any electrical block",
	
	"item.kontrol.basic_multimeter": "Basic Multimeter",
	"item.kontrol.basic_multimeter.tooltip": "Measures only voltages",
	
	"item.kontrol.advanced_multimeter": "Advanced Multimeter",
	"item.kontrol.advanced_multimeter.tooltip": "Measures volts, amps, watts and polarity",
	
	"item.kontrol.elite_multimeter": "Elite Multimeter",
	"item.kontrol.elite_multimeter.tooltip": "Measures V, A, W, polarity & temp",
	
	"item.kontrol.ultimate_multimeter": "Ultimate Multimeter",
	"item.kontrol.ultimate_multimeter.tooltip": "Measures V, A, W, temp, polarity and misc.",
	
	"item.kontrol.thermometer": "Electrical Thermometer",
	"item.kontrol.thermometer.tooltip": "Measures temperature",
	
	"item.kontrol.omnimeter": "Omnimeter",
	"item.kontrol.omnimeter.tooltip": "Measures all properties (Creative only)",
	
	"muc_maker.side_length": "Side length",
	"muc_maker.port_low": "Port lower",
	"muc_maker.port_high": "Port higher",
	"muc_maker.rotation": "Rotation",
	"muc_maker.prev": "Prev.",
	"muc_maker.next": "Next.",
	
	"muc_core.max_networks": "§cNetwork limit has been reached, max is ",
	
	"microcontroller.c8051": "M8051F020"
	
}